class Foo inherits Baz {};
class Bar inherits Foo {};
class Baz inherits Bar {};

class FooBar inherits Foo, Bar, Baz {};

class A{};
class B inherits A {};
class C inherits A {};
class D inherits B, C {};

class Member inherits Inherited {};
class Inherited {
  public Member member;
};

class Same inherits Same {};

class E inherits NotFound {};

class Valid {
  public integer a;

  public method(integer x) : integer;
  public method(integer x, float y) : float;

  public not_defined(integer x) : void;
  public mismatch(integer x) : void;
};

class SubValid inherits Valid {
  private integer a;
};

A::not_declared(integer x) : integer
  do
    return(10);
  end;

Valid::method(integer x) : integer
  do
    return(2.0);
  end;

Valid::method(integer x, float y) : float
  do
    if(x > 2)
    then
      return(x);
    else
      if(x > 1)
      then
          return(f);
      else
      ;
    ;
  end;

Valid::mismatch(integer x) : integer
  do
    return(x + a);
  end;

Undeclared::method(float f) : float
  do
    return(f);
  end;

free_fun(integer x) : integer
  local
    integer x;
  do
    return(x);
  end;

main
  local
    float f;
    integer i;
    integer array[10];
    D d;
    A a;
    SubValid v;
    Undeclared u;
    float f;
    B a;
  do
    f = 1.0;
    f = 1;
    i = 1.0;
    i = 1;
    write(array[f]);
    write(array[i][i][i]);
    write(i);
    write(f);
    write(f + i);
    write(a + d);
    write(a + a);
    write(f.a);
    write(v.a);
    write(v.method(i));
    write(v.method(i, f));
    write(v.method(i, i));
    write(v.method(f, f));
  end
