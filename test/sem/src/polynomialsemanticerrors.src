// ====== Class declarations ====== //
class POLYNOMIAL inherits LINEAR {                                      // (14) semantic error: circular dependency
	public evaluate(float x) : float;
	public undefined() : void;                                          // (6) semantic error: undefined member function
        public integer a;
	public float a;                                                     // (8) semantic error: multiply declared data member
}

class A{}
class A{}                                                               // (8) semantic error: multiply declared class

class LINEAR inherits POLYNOMIAL {
	private float a;
	private float b;
	private UNDECLARED undeclared;                                      // (11) semantic error: use of undeclared class; 
	
	public build(float A, float B) : LINEAR;
	public evaluate(float x) : float;
}

class C {
        private float a;
	public f(integer a): integer; 
}
class D {
        private float a;                                                // (5) semantic warning: shadowed data member a
        public f(integer x): integer                                    // (5) semantic warning : shadowed member function f(integer):integer
        public f(float f): float                                        // (9) semantic warning : overloaded member function f(float):float
}

class QUADRATIC inherits POLYNOMIAL {
	private float a;
	private float b;
	private float c;
	
	public build(float A, float B, float C) : QUADRATIC;
	public evaluate(float x) : float;
}

// ====== Function Definitions ====== //

LINEAR::f() : void                                                      // (6) semantic error: undeclared member function 
  local
    integer x;
  do
    x = 1;
    notdeclared = 0;                                                    // (11) semantic error: use of undeclared local variable
    return x;
  end

POLYNOMIAL::evaluate(float x) : float
  do
    return (0);
  end

LINEAR::evaluate(float x) : float
  local
    float result;
    integer result;                                                     // (8) semantic error: multiply declared local variable
    float x;                                                            // (8) semantic error: multiply declared local variable
  do
    result = 0.0;
    result = a * x + b;
    return (result);
  end
  
QUADRATIC::evaluate(float x) : float
  local
    float result;
  do    //Using Horner's method
    result = a;
    result = result * x + b;
    result = result * x + c;
    return (result);
  end
  
LINEAR::build(float A, float B) : LINEAR
  local
    LINEAR new_function;
  do
    new_function.a = A;
    new_function.b = B;
    new_function.undeclareddata = 1;                                     // (15) semantic error: use of undeclared data member
    new_function.undeclaredfunction();                                   // (15) semantic error: use of undeclared member function
    return (new_function);
  end  
  
QUADRATIC::build(float A, float B, float C) : QUADRATIC
  local
    QUADRATIC new_function;
  do
    new_function.a = A;
    new_function.b = B;
    new_function.c = C;
    return (new_function);
  end

f(integer p_arr[][][]): integer
  do
    return 2.5 + 3.5 * 8.8;                                              // (10) semantic error: invalid value type returned
  end

f(float x): integer                                                      // (9) semantic warning: overloaded free function f(float):integer
 do
   return 1;
 end
 
// ====== main ====== //
main
  local
    LINEAR f1;
    QUADRATIC f2;
    integer counter;
    integer arr[2][3];
  do
    f1 = f1.build(2, 3.5+2.3/4.2);                                       // (12) semantic error: undeclared member function build(integer,float)
    f2 = f2.build(-2.0, 1.0, 0.0);                                       // (12) semantic error: undeclared member function build(float,float,float) 
    f2 = f2.build(2,1,0);                                                // (12) semantic error: undeclared member function build(integer,integer,integer)
    f3();                                                                // (11) semantic error: use of undeclared free function
    counter = 1;
    counter = arr[1][1][1];                                              // (13) semantic error: array used with wrong number of dimensions
    counter = arr[2.5+3.2][1];                                           // (13) semantic error: array index not an integer value   
    counter = f(arr);                                                    // (13) semantic error: array passed to function with incompatible dimensionality
    counter = 3.5 + 2.4 / 3.3;                                           // (10) semantic error: incompatible type for assignment (integer = float)
    while(counter <= 10)
      do
        write(counter);
        write(f1.evaluate(counter));
        write(f2.evaluate(counter));
      end;
  end